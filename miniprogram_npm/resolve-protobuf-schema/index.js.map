{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["var schema = require('protocol-buffers-schema')\nvar fs = require('fs')\nvar path = require('path')\n\nvar merge = function(a, b) {\n  a.messages = a.messages.concat(b.messages)\n  a.enums = a.enums.concat(b.enums)\n  return a\n}\n\nvar readSync = function(filename) {\n  if (!/\\.proto$/i.test(filename) && !fs.existsSync(filename)) filename += '.proto'\n\n  var sch = schema(fs.readFileSync(filename, 'utf-8'))\n  var imports = [].concat(sch.imports || [])\n\n  imports.forEach(function(i) {\n    sch = merge(sch, readSync(path.resolve(path.dirname(filename), i)))\n  })\n\n  return sch\n}\n\nvar read = function(filename, cb) {\n  fs.exists(filename, function(exists) {\n    if (!exists && !/\\.proto$/i.test(filename)) filename += '.proto'\n\n    fs.readFile(filename, 'utf-8', function(err, proto) {\n      if (err) return cb(err)\n\n      var sch = schema(proto)\n      var imports = [].concat(sch.imports || [])\n\n      var loop = function() {\n        if (!imports.length) return cb(null, sch)\n\n        read(path.resolve(path.dirname(filename), imports.shift()), function(err, ch) {\n          if (err) return cb(err)\n          sch = merge(sch, ch)\n          loop()\n        })\n      }\n\n      loop()\n    })\n  })\n}\n\nmodule.exports = read\nmodule.exports.sync = readSync"]}